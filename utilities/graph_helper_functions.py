import seaborn as sb


def create_count_plot(input_data, x_label, y_label, columns_start, columns_end, rotation=70, max_column="max_value"):
    """
    Create a count plot from given input data
    :param input_data: the
    :param x_label: label of an x-axis in the resulting graph
    :param y_label: label of a y-axis in the resulting graph
    :param columns_start: the first column to be displayed
    :param columns_end: the last columns to be displayed
    :param rotation: rotation of the labels
    :param max_column: name of the column containing maximum value data
    :return: resulting count plot graph
    """

    count_plot = sb.countplot(x=max_column,
                              data=input_data,
                              order=input_data.max_value.value_counts().iloc[columns_start:columns_end].index)

    count_plot.set_xticklabels(count_plot.get_xticklabels(), rotation=rotation)
    count_plot.set(xlabel=x_label, ylabel=y_label)

    return count_plot.get_figure()


def create_confusion_matrix(con_matrix):
    """
    Creates a graphical representation of a given confusion matrix
    :param con_matrix: input confusion matrix
    :return:
    """

    heat_map = sb.heatmap(con_matrix, square=True, annot=True, fmt='d', linewidths=.5)
    heat_map.set(xlabel="expected value", ylabel="predicted value")

    return heat_map.get_figure()
