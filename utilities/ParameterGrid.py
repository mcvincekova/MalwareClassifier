import numpy as np


class ParameterGrid:
    """ Class representing a parameter grid used for hyperparameter tuning of the Random Forest Classifier"""

    def __init__(self):
        self.n_estimators = [int(x) for x in np.linspace(start=10, stop=200, num=20)]
        self.max_features = ['sqrt', 'log2']
        self.max_depth = [int(x) for x in np.linspace(start=10, stop=100, num=10)]

    def get_param_grid(self):
        """
        Return a grid of tuning parameters where:
        n_estimators - represents the number of decision trees in the random forest
        max_depth - maximum depth of decision trees in the random forest
        max_features - number of features used at each branching withing the decision trees
        :return:
        """

        random_grid = {
            'n_estimators': self.n_estimators,
            'max_depth': self.max_depth,
            'max_features': self.max_features
        }

        return random_grid

    def __str__(self):
        return str(self.get_param_grid())
