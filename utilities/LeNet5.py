from tensorflow.keras.layers import Conv2D, Dense, MaxPool2D, Flatten
from tensorflow.keras.models import Sequential


class LeNet5(Sequential):
    """
    Represents a LeNet5 Architecture with an arbitrary optimiser
    """

    def __init__(self, image_input_shape, num_of_classes, loss, optimiser):
        super().__init__()
        self.add(Conv2D(filters=6, kernel_size=(5, 5), activation='relu', input_shape=image_input_shape))
        self.add(MaxPool2D(strides=2))
        self.add(Conv2D(filters=16, kernel_size=(5, 5), activation='relu'))
        self.add(MaxPool2D(strides=2))
        self.add(Flatten())
        self.add(Dense(120, activation='relu'))
        self.add(Dense(84, activation='relu'))
        self.add(Dense(num_of_classes, activation='softmax'))

        self.compile(loss=loss, metrics=['accuracy'], optimizer=optimiser)
